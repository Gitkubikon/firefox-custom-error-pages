#!/bin/bash

# Configuration
ZEN_PATH="/opt/zen-twilight-bin"
OMNI_FILE="$ZEN_PATH/omni.ja"
PROJECT_DIR="$HOME/Projects/Gitkubikon/firefox-custom-error-pages"
BACKUP_DIR="$PROJECT_DIR/backups"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m'

# Print functions
print_status() { echo -e "${BLUE}[INFO]${NC} $1"; }
print_success() { echo -e "${GREEN}[SUCCESS]${NC} $1"; }
print_warning() { echo -e "${YELLOW}[WARNING]${NC} $1"; }
print_error() { echo -e "${RED}[ERROR]${NC} $1"; }
print_header() { echo -e "${PURPLE}=== $1 ===${NC}"; }

print_header "EXTRACTING ERROR PAGE FILES"

# Basic checks
if [ ! -f "$OMNI_FILE" ]; then
    print_error "omni.ja not found at $OMNI_FILE"
    exit 1
fi

# Create directories
print_status "Creating directories..."
mkdir -p "$PROJECT_DIR"/{content/{global,httpsonlyerror,neterror},skin/{css,icons,illustrations},localization/en-US}
mkdir -p "$BACKUP_DIR"

# Create backup
BACKUP_NAME="omni.ja.backup.$(date +%Y%m%d_%H%M%S)"
print_status "Creating backup..."
sudo cp "$OMNI_FILE" "$BACKUP_DIR/$BACKUP_NAME"
print_success "Backup: $BACKUP_DIR/$BACKUP_NAME"

# Extract
EXTRACT_DIR="/tmp/zen_extract_$$"
rm -rf "$EXTRACT_DIR"
mkdir -p "$EXTRACT_DIR"
cd "$EXTRACT_DIR"

print_status "Extracting omni.ja..."
unzip -o "$OMNI_FILE" >/dev/null 2>&1

# Copy files
print_status "Copying files to project directory..."

# Main files
cp chrome/toolkit/content/global/aboutNetError.html "$PROJECT_DIR/content/global/" 2>/dev/null && print_success "✓ aboutNetError.html"
cp chrome/toolkit/content/global/aboutNetError.mjs "$PROJECT_DIR/content/global/" 2>/dev/null && print_success "✓ aboutNetError.mjs"
cp chrome/toolkit/content/global/aboutNetErrorHelpers.mjs "$PROJECT_DIR/content/global/" 2>/dev/null && print_success "✓ aboutNetErrorHelpers.mjs"
cp chrome/toolkit/content/global/net-error-card.mjs "$PROJECT_DIR/content/global/" 2>/dev/null && print_success "✓ net-error-card.mjs"

# CSS files
cp chrome/toolkit/skin/classic/global/aboutNetError.css "$PROJECT_DIR/skin/css/" 2>/dev/null && print_success "✓ aboutNetError.css"
cp chrome/toolkit/skin/classic/global/aboutHttpsOnlyError.css "$PROJECT_DIR/skin/css/" 2>/dev/null && print_success "✓ aboutHttpsOnlyError.css"
cp chrome/toolkit/skin/classic/global/error-pages.css "$PROJECT_DIR/skin/css/" 2>/dev/null && print_success "✓ error-pages.css"

# Other files
cp -r chrome/toolkit/content/global/httpsonlyerror/* "$PROJECT_DIR/content/httpsonlyerror/" 2>/dev/null && print_success "✓ httpsonlyerror files"
cp -r chrome/toolkit/content/global/neterror/* "$PROJECT_DIR/content/neterror/" 2>/dev/null && print_success "✓ neterror files"
cp -r localization/en-US/toolkit/neterror "$PROJECT_DIR/localization/en-US/" 2>/dev/null && print_success "✓ localization files"
cp chrome/toolkit/skin/classic/global/icons/error.svg "$PROJECT_DIR/skin/icons/" 2>/dev/null && print_success "✓ error.svg"
find chrome/toolkit/skin/classic/global/illustrations -name "*error*" -exec cp {} "$PROJECT_DIR/skin/illustrations/" \; 2>/dev/null

# Cleanup
cd /
rm -rf "$EXTRACT_DIR"

print_success "Files extracted successfully!"
print_status "Edit files in: $PROJECT_DIR"
